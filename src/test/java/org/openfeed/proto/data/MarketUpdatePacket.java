// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MarketUpdatePacketSpec.proto

package org.openfeed.proto.data;

/**
 * Protobuf type {@code org.openfeed.proto.data.MarketUpdatePacket}
 *
 * <pre>
 * Market update data packet with header.
 * </pre>
 */
public  final class MarketUpdatePacket extends
    com.google.protobuf.GeneratedMessage
    implements MarketUpdatePacketOrBuilder {
  // Use MarketUpdatePacket.newBuilder() to construct.
  private MarketUpdatePacket(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private MarketUpdatePacket(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final MarketUpdatePacket defaultInstance;
  public static MarketUpdatePacket getDefaultInstance() {
    return defaultInstance;
  }

  public MarketUpdatePacket getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private MarketUpdatePacket(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            channel_ = input.readSInt32();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            sequence_ = input.readSInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            timeStamp_ = input.readSInt64();
            break;
          }
          case 32: {
            int rawValue = input.readEnum();
            org.openfeed.proto.data.PacketType value = org.openfeed.proto.data.PacketType.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(4, rawValue);
            } else {
              bitField0_ |= 0x00000008;
              packetType_ = value;
            }
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              message_ = new java.util.ArrayList<org.openfeed.proto.data.MarketUpdateMessage>();
              mutable_bitField0_ |= 0x00000010;
            }
            message_.add(input.readMessage(org.openfeed.proto.data.MarketUpdateMessage.PARSER, extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        message_ = java.util.Collections.unmodifiableList(message_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.openfeed.proto.data.MarketUpdatePacketSpec.internal_static_org_openfeed_proto_data_MarketUpdatePacket_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.openfeed.proto.data.MarketUpdatePacketSpec.internal_static_org_openfeed_proto_data_MarketUpdatePacket_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.openfeed.proto.data.MarketUpdatePacket.class, org.openfeed.proto.data.MarketUpdatePacket.Builder.class);
  }

  public static com.google.protobuf.Parser<MarketUpdatePacket> PARSER =
      new com.google.protobuf.AbstractParser<MarketUpdatePacket>() {
    public MarketUpdatePacket parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MarketUpdatePacket(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<MarketUpdatePacket> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  // optional sint32 channel = 1;
  public static final int CHANNEL_FIELD_NUMBER = 1;
  private int channel_;
  /**
   * <code>optional sint32 channel = 1;</code>
   *
   * <pre>
   * Packet channel number.
   * Globally unique in data feed.
   * </pre>
   */
  public boolean hasChannel() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional sint32 channel = 1;</code>
   *
   * <pre>
   * Packet channel number.
   * Globally unique in data feed.
   * </pre>
   */
  public int getChannel() {
    return channel_;
  }

  // optional sint64 sequence = 2;
  public static final int SEQUENCE_FIELD_NUMBER = 2;
  private long sequence_;
  /**
   * <code>optional sint64 sequence = 2;</code>
   *
   * <pre>
   * Packet sequence number inside the channel.
   * Globally unique in the channel during the trade day.
   * Positive, reset to 1 every trade day.
   * Reset happens on local market date change or market open event.
   * </pre>
   */
  public boolean hasSequence() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional sint64 sequence = 2;</code>
   *
   * <pre>
   * Packet sequence number inside the channel.
   * Globally unique in the channel during the trade day.
   * Positive, reset to 1 every trade day.
   * Reset happens on local market date change or market open event.
   * </pre>
   */
  public long getSequence() {
    return sequence_;
  }

  // optional sint64 timeStamp = 3;
  public static final int TIMESTAMP_FIELD_NUMBER = 3;
  private long timeStamp_;
  /**
   * <code>optional sint64 timeStamp = 3;</code>
   *
   * <pre>
   * Packet send time.
   * Base for message entries, millisFIX, UTC
   * </pre>
   */
  public boolean hasTimeStamp() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional sint64 timeStamp = 3;</code>
   *
   * <pre>
   * Packet send time.
   * Base for message entries, millisFIX, UTC
   * </pre>
   */
  public long getTimeStamp() {
    return timeStamp_;
  }

  // optional .org.openfeed.proto.data.PacketType packetType = 4 [default = MARKET_UPDATE];
  public static final int PACKETTYPE_FIELD_NUMBER = 4;
  private org.openfeed.proto.data.PacketType packetType_;
  /**
   * <code>optional .org.openfeed.proto.data.PacketType packetType = 4 [default = MARKET_UPDATE];</code>
   *
   * <pre>
   * Packet body type selector.
   * </pre>
   */
  public boolean hasPacketType() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional .org.openfeed.proto.data.PacketType packetType = 4 [default = MARKET_UPDATE];</code>
   *
   * <pre>
   * Packet body type selector.
   * </pre>
   */
  public org.openfeed.proto.data.PacketType getPacketType() {
    return packetType_;
  }

  // repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;
  public static final int MESSAGE_FIELD_NUMBER = 5;
  private java.util.List<org.openfeed.proto.data.MarketUpdateMessage> message_;
  /**
   * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
   *
   * <pre>
   * Ordered list of update messages.
   * </pre>
   */
  public java.util.List<org.openfeed.proto.data.MarketUpdateMessage> getMessageList() {
    return message_;
  }
  /**
   * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
   *
   * <pre>
   * Ordered list of update messages.
   * </pre>
   */
  public java.util.List<? extends org.openfeed.proto.data.MarketUpdateMessageOrBuilder> 
      getMessageOrBuilderList() {
    return message_;
  }
  /**
   * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
   *
   * <pre>
   * Ordered list of update messages.
   * </pre>
   */
  public int getMessageCount() {
    return message_.size();
  }
  /**
   * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
   *
   * <pre>
   * Ordered list of update messages.
   * </pre>
   */
  public org.openfeed.proto.data.MarketUpdateMessage getMessage(int index) {
    return message_.get(index);
  }
  /**
   * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
   *
   * <pre>
   * Ordered list of update messages.
   * </pre>
   */
  public org.openfeed.proto.data.MarketUpdateMessageOrBuilder getMessageOrBuilder(
      int index) {
    return message_.get(index);
  }

  private void initFields() {
    channel_ = 0;
    sequence_ = 0L;
    timeStamp_ = 0L;
    packetType_ = org.openfeed.proto.data.PacketType.MARKET_UPDATE;
    message_ = java.util.Collections.emptyList();
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized != -1) return isInitialized == 1;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeSInt32(1, channel_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeSInt64(2, sequence_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeSInt64(3, timeStamp_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeEnum(4, packetType_.getNumber());
    }
    for (int i = 0; i < message_.size(); i++) {
      output.writeMessage(5, message_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(1, channel_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(2, sequence_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(3, timeStamp_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, packetType_.getNumber());
    }
    for (int i = 0; i < message_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, message_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.openfeed.proto.data.MarketUpdatePacket)) {
      return super.equals(obj);
    }
    org.openfeed.proto.data.MarketUpdatePacket other = (org.openfeed.proto.data.MarketUpdatePacket) obj;

    boolean result = true;
    result = result && (hasChannel() == other.hasChannel());
    if (hasChannel()) {
      result = result && (getChannel()
          == other.getChannel());
    }
    result = result && (hasSequence() == other.hasSequence());
    if (hasSequence()) {
      result = result && (getSequence()
          == other.getSequence());
    }
    result = result && (hasTimeStamp() == other.hasTimeStamp());
    if (hasTimeStamp()) {
      result = result && (getTimeStamp()
          == other.getTimeStamp());
    }
    result = result && (hasPacketType() == other.hasPacketType());
    if (hasPacketType()) {
      result = result &&
          (getPacketType() == other.getPacketType());
    }
    result = result && getMessageList()
        .equals(other.getMessageList());
    result = result &&
        getUnknownFields().equals(other.getUnknownFields());
    return result;
  }

  private int memoizedHashCode = 0;
  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasChannel()) {
      hash = (37 * hash) + CHANNEL_FIELD_NUMBER;
      hash = (53 * hash) + getChannel();
    }
    if (hasSequence()) {
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + hashLong(getSequence());
    }
    if (hasTimeStamp()) {
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + hashLong(getTimeStamp());
    }
    if (hasPacketType()) {
      hash = (37 * hash) + PACKETTYPE_FIELD_NUMBER;
      hash = (53 * hash) + hashEnum(getPacketType());
    }
    if (getMessageCount() > 0) {
      hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
      hash = (53 * hash) + getMessageList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.openfeed.proto.data.MarketUpdatePacket parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.openfeed.proto.data.MarketUpdatePacket parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.openfeed.proto.data.MarketUpdatePacket parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.openfeed.proto.data.MarketUpdatePacket parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.openfeed.proto.data.MarketUpdatePacket parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.openfeed.proto.data.MarketUpdatePacket parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.openfeed.proto.data.MarketUpdatePacket parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.openfeed.proto.data.MarketUpdatePacket parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.openfeed.proto.data.MarketUpdatePacket parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.openfeed.proto.data.MarketUpdatePacket parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(org.openfeed.proto.data.MarketUpdatePacket prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.openfeed.proto.data.MarketUpdatePacket}
   *
   * <pre>
   * Market update data packet with header.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder>
     implements org.openfeed.proto.data.MarketUpdatePacketOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openfeed.proto.data.MarketUpdatePacketSpec.internal_static_org_openfeed_proto_data_MarketUpdatePacket_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openfeed.proto.data.MarketUpdatePacketSpec.internal_static_org_openfeed_proto_data_MarketUpdatePacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openfeed.proto.data.MarketUpdatePacket.class, org.openfeed.proto.data.MarketUpdatePacket.Builder.class);
    }

    // Construct using org.openfeed.proto.data.MarketUpdatePacket.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getMessageFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      channel_ = 0;
      bitField0_ = (bitField0_ & ~0x00000001);
      sequence_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      timeStamp_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      packetType_ = org.openfeed.proto.data.PacketType.MARKET_UPDATE;
      bitField0_ = (bitField0_ & ~0x00000008);
      if (messageBuilder_ == null) {
        message_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        messageBuilder_.clear();
      }
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.openfeed.proto.data.MarketUpdatePacketSpec.internal_static_org_openfeed_proto_data_MarketUpdatePacket_descriptor;
    }

    public org.openfeed.proto.data.MarketUpdatePacket getDefaultInstanceForType() {
      return org.openfeed.proto.data.MarketUpdatePacket.getDefaultInstance();
    }

    public org.openfeed.proto.data.MarketUpdatePacket build() {
      org.openfeed.proto.data.MarketUpdatePacket result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.openfeed.proto.data.MarketUpdatePacket buildPartial() {
      org.openfeed.proto.data.MarketUpdatePacket result = new org.openfeed.proto.data.MarketUpdatePacket(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.channel_ = channel_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.sequence_ = sequence_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.timeStamp_ = timeStamp_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.packetType_ = packetType_;
      if (messageBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          message_ = java.util.Collections.unmodifiableList(message_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.message_ = message_;
      } else {
        result.message_ = messageBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.openfeed.proto.data.MarketUpdatePacket) {
        return mergeFrom((org.openfeed.proto.data.MarketUpdatePacket)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.openfeed.proto.data.MarketUpdatePacket other) {
      if (other == org.openfeed.proto.data.MarketUpdatePacket.getDefaultInstance()) return this;
      if (other.hasChannel()) {
        setChannel(other.getChannel());
      }
      if (other.hasSequence()) {
        setSequence(other.getSequence());
      }
      if (other.hasTimeStamp()) {
        setTimeStamp(other.getTimeStamp());
      }
      if (other.hasPacketType()) {
        setPacketType(other.getPacketType());
      }
      if (messageBuilder_ == null) {
        if (!other.message_.isEmpty()) {
          if (message_.isEmpty()) {
            message_ = other.message_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureMessageIsMutable();
            message_.addAll(other.message_);
          }
          onChanged();
        }
      } else {
        if (!other.message_.isEmpty()) {
          if (messageBuilder_.isEmpty()) {
            messageBuilder_.dispose();
            messageBuilder_ = null;
            message_ = other.message_;
            bitField0_ = (bitField0_ & ~0x00000010);
            messageBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getMessageFieldBuilder() : null;
          } else {
            messageBuilder_.addAllMessages(other.message_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.openfeed.proto.data.MarketUpdatePacket parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.openfeed.proto.data.MarketUpdatePacket) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    // optional sint32 channel = 1;
    private int channel_ ;
    /**
     * <code>optional sint32 channel = 1;</code>
     *
     * <pre>
     * Packet channel number.
     * Globally unique in data feed.
     * </pre>
     */
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint32 channel = 1;</code>
     *
     * <pre>
     * Packet channel number.
     * Globally unique in data feed.
     * </pre>
     */
    public int getChannel() {
      return channel_;
    }
    /**
     * <code>optional sint32 channel = 1;</code>
     *
     * <pre>
     * Packet channel number.
     * Globally unique in data feed.
     * </pre>
     */
    public Builder setChannel(int value) {
      bitField0_ |= 0x00000001;
      channel_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 channel = 1;</code>
     *
     * <pre>
     * Packet channel number.
     * Globally unique in data feed.
     * </pre>
     */
    public Builder clearChannel() {
      bitField0_ = (bitField0_ & ~0x00000001);
      channel_ = 0;
      onChanged();
      return this;
    }

    // optional sint64 sequence = 2;
    private long sequence_ ;
    /**
     * <code>optional sint64 sequence = 2;</code>
     *
     * <pre>
     * Packet sequence number inside the channel.
     * Globally unique in the channel during the trade day.
     * Positive, reset to 1 every trade day.
     * Reset happens on local market date change or market open event.
     * </pre>
     */
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint64 sequence = 2;</code>
     *
     * <pre>
     * Packet sequence number inside the channel.
     * Globally unique in the channel during the trade day.
     * Positive, reset to 1 every trade day.
     * Reset happens on local market date change or market open event.
     * </pre>
     */
    public long getSequence() {
      return sequence_;
    }
    /**
     * <code>optional sint64 sequence = 2;</code>
     *
     * <pre>
     * Packet sequence number inside the channel.
     * Globally unique in the channel during the trade day.
     * Positive, reset to 1 every trade day.
     * Reset happens on local market date change or market open event.
     * </pre>
     */
    public Builder setSequence(long value) {
      bitField0_ |= 0x00000002;
      sequence_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint64 sequence = 2;</code>
     *
     * <pre>
     * Packet sequence number inside the channel.
     * Globally unique in the channel during the trade day.
     * Positive, reset to 1 every trade day.
     * Reset happens on local market date change or market open event.
     * </pre>
     */
    public Builder clearSequence() {
      bitField0_ = (bitField0_ & ~0x00000002);
      sequence_ = 0L;
      onChanged();
      return this;
    }

    // optional sint64 timeStamp = 3;
    private long timeStamp_ ;
    /**
     * <code>optional sint64 timeStamp = 3;</code>
     *
     * <pre>
     * Packet send time.
     * Base for message entries, millisFIX, UTC
     * </pre>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint64 timeStamp = 3;</code>
     *
     * <pre>
     * Packet send time.
     * Base for message entries, millisFIX, UTC
     * </pre>
     */
    public long getTimeStamp() {
      return timeStamp_;
    }
    /**
     * <code>optional sint64 timeStamp = 3;</code>
     *
     * <pre>
     * Packet send time.
     * Base for message entries, millisFIX, UTC
     * </pre>
     */
    public Builder setTimeStamp(long value) {
      bitField0_ |= 0x00000004;
      timeStamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint64 timeStamp = 3;</code>
     *
     * <pre>
     * Packet send time.
     * Base for message entries, millisFIX, UTC
     * </pre>
     */
    public Builder clearTimeStamp() {
      bitField0_ = (bitField0_ & ~0x00000004);
      timeStamp_ = 0L;
      onChanged();
      return this;
    }

    // optional .org.openfeed.proto.data.PacketType packetType = 4 [default = MARKET_UPDATE];
    private org.openfeed.proto.data.PacketType packetType_ = org.openfeed.proto.data.PacketType.MARKET_UPDATE;
    /**
     * <code>optional .org.openfeed.proto.data.PacketType packetType = 4 [default = MARKET_UPDATE];</code>
     *
     * <pre>
     * Packet body type selector.
     * </pre>
     */
    public boolean hasPacketType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .org.openfeed.proto.data.PacketType packetType = 4 [default = MARKET_UPDATE];</code>
     *
     * <pre>
     * Packet body type selector.
     * </pre>
     */
    public org.openfeed.proto.data.PacketType getPacketType() {
      return packetType_;
    }
    /**
     * <code>optional .org.openfeed.proto.data.PacketType packetType = 4 [default = MARKET_UPDATE];</code>
     *
     * <pre>
     * Packet body type selector.
     * </pre>
     */
    public Builder setPacketType(org.openfeed.proto.data.PacketType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      packetType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional .org.openfeed.proto.data.PacketType packetType = 4 [default = MARKET_UPDATE];</code>
     *
     * <pre>
     * Packet body type selector.
     * </pre>
     */
    public Builder clearPacketType() {
      bitField0_ = (bitField0_ & ~0x00000008);
      packetType_ = org.openfeed.proto.data.PacketType.MARKET_UPDATE;
      onChanged();
      return this;
    }

    // repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;
    private java.util.List<org.openfeed.proto.data.MarketUpdateMessage> message_ =
      java.util.Collections.emptyList();
    private void ensureMessageIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        message_ = new java.util.ArrayList<org.openfeed.proto.data.MarketUpdateMessage>(message_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        org.openfeed.proto.data.MarketUpdateMessage, org.openfeed.proto.data.MarketUpdateMessage.Builder, org.openfeed.proto.data.MarketUpdateMessageOrBuilder> messageBuilder_;

    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public java.util.List<org.openfeed.proto.data.MarketUpdateMessage> getMessageList() {
      if (messageBuilder_ == null) {
        return java.util.Collections.unmodifiableList(message_);
      } else {
        return messageBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public int getMessageCount() {
      if (messageBuilder_ == null) {
        return message_.size();
      } else {
        return messageBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public org.openfeed.proto.data.MarketUpdateMessage getMessage(int index) {
      if (messageBuilder_ == null) {
        return message_.get(index);
      } else {
        return messageBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public Builder setMessage(
        int index, org.openfeed.proto.data.MarketUpdateMessage value) {
      if (messageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessageIsMutable();
        message_.set(index, value);
        onChanged();
      } else {
        messageBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public Builder setMessage(
        int index, org.openfeed.proto.data.MarketUpdateMessage.Builder builderForValue) {
      if (messageBuilder_ == null) {
        ensureMessageIsMutable();
        message_.set(index, builderForValue.build());
        onChanged();
      } else {
        messageBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public Builder addMessage(org.openfeed.proto.data.MarketUpdateMessage value) {
      if (messageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessageIsMutable();
        message_.add(value);
        onChanged();
      } else {
        messageBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public Builder addMessage(
        int index, org.openfeed.proto.data.MarketUpdateMessage value) {
      if (messageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureMessageIsMutable();
        message_.add(index, value);
        onChanged();
      } else {
        messageBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public Builder addMessage(
        org.openfeed.proto.data.MarketUpdateMessage.Builder builderForValue) {
      if (messageBuilder_ == null) {
        ensureMessageIsMutable();
        message_.add(builderForValue.build());
        onChanged();
      } else {
        messageBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public Builder addMessage(
        int index, org.openfeed.proto.data.MarketUpdateMessage.Builder builderForValue) {
      if (messageBuilder_ == null) {
        ensureMessageIsMutable();
        message_.add(index, builderForValue.build());
        onChanged();
      } else {
        messageBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public Builder addAllMessage(
        java.lang.Iterable<? extends org.openfeed.proto.data.MarketUpdateMessage> values) {
      if (messageBuilder_ == null) {
        ensureMessageIsMutable();
        super.addAll(values, message_);
        onChanged();
      } else {
        messageBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public Builder clearMessage() {
      if (messageBuilder_ == null) {
        message_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        messageBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public Builder removeMessage(int index) {
      if (messageBuilder_ == null) {
        ensureMessageIsMutable();
        message_.remove(index);
        onChanged();
      } else {
        messageBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public org.openfeed.proto.data.MarketUpdateMessage.Builder getMessageBuilder(
        int index) {
      return getMessageFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public org.openfeed.proto.data.MarketUpdateMessageOrBuilder getMessageOrBuilder(
        int index) {
      if (messageBuilder_ == null) {
        return message_.get(index);  } else {
        return messageBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public java.util.List<? extends org.openfeed.proto.data.MarketUpdateMessageOrBuilder> 
         getMessageOrBuilderList() {
      if (messageBuilder_ != null) {
        return messageBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(message_);
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public org.openfeed.proto.data.MarketUpdateMessage.Builder addMessageBuilder() {
      return getMessageFieldBuilder().addBuilder(
          org.openfeed.proto.data.MarketUpdateMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public org.openfeed.proto.data.MarketUpdateMessage.Builder addMessageBuilder(
        int index) {
      return getMessageFieldBuilder().addBuilder(
          index, org.openfeed.proto.data.MarketUpdateMessage.getDefaultInstance());
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketUpdateMessage message = 5;</code>
     *
     * <pre>
     * Ordered list of update messages.
     * </pre>
     */
    public java.util.List<org.openfeed.proto.data.MarketUpdateMessage.Builder> 
         getMessageBuilderList() {
      return getMessageFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        org.openfeed.proto.data.MarketUpdateMessage, org.openfeed.proto.data.MarketUpdateMessage.Builder, org.openfeed.proto.data.MarketUpdateMessageOrBuilder> 
        getMessageFieldBuilder() {
      if (messageBuilder_ == null) {
        messageBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            org.openfeed.proto.data.MarketUpdateMessage, org.openfeed.proto.data.MarketUpdateMessage.Builder, org.openfeed.proto.data.MarketUpdateMessageOrBuilder>(
                message_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        message_ = null;
      }
      return messageBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:org.openfeed.proto.data.MarketUpdatePacket)
  }

  static {
    defaultInstance = new MarketUpdatePacket(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.openfeed.proto.data.MarketUpdatePacket)
}

