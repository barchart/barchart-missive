// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MarketSnapshotMessageSpec.proto

package org.openfeed.proto.data;

/**
 * Protobuf type {@code org.openfeed.proto.data.MarketSnapshotMessage}
 *
 * <pre>
 * Market data message.
 * </pre>
 */
public  final class MarketSnapshotMessage extends
    com.google.protobuf.GeneratedMessage
    implements MarketSnapshotMessageOrBuilder {
  // Use MarketSnapshotMessage.newBuilder() to construct.
  private MarketSnapshotMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
    this.unknownFields = builder.getUnknownFields();
  }
  private MarketSnapshotMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

  private static final MarketSnapshotMessage defaultInstance;
  public static MarketSnapshotMessage getDefaultInstance() {
    return defaultInstance;
  }

  public MarketSnapshotMessage getDefaultInstanceForType() {
    return defaultInstance;
  }

  private final com.google.protobuf.UnknownFieldSet unknownFields;
  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
    return this.unknownFields;
  }
  private MarketSnapshotMessage(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    initFields();
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(input, unknownFields,
                                   extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            bitField0_ |= 0x00000001;
            marketId_ = input.readSInt64();
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            sequence_ = input.readSInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            lastUpdateSequence_ = input.readSInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            timeStamp_ = input.readSInt64();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            tradeDate_ = input.readSInt32();
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              entry_ = new java.util.ArrayList<org.openfeed.proto.data.MarketEntry>();
              mutable_bitField0_ |= 0x00000020;
            }
            entry_.add(input.readMessage(org.openfeed.proto.data.MarketEntry.PARSER, extensionRegistry));
            break;
          }
          case 56: {
            bitField0_ |= 0x00000020;
            priceExponent_ = input.readSInt32();
            break;
          }
          case 64: {
            bitField0_ |= 0x00000040;
            sizeExponent_ = input.readSInt32();
            break;
          }
          case 72: {
            bitField0_ |= 0x00000080;
            totalExpectedEntries_ = input.readSInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e.getMessage()).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        entry_ = java.util.Collections.unmodifiableList(entry_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.openfeed.proto.data.MarketSnapshotMessageSpec.internal_static_org_openfeed_proto_data_MarketSnapshotMessage_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.openfeed.proto.data.MarketSnapshotMessageSpec.internal_static_org_openfeed_proto_data_MarketSnapshotMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.openfeed.proto.data.MarketSnapshotMessage.class, org.openfeed.proto.data.MarketSnapshotMessage.Builder.class);
  }

  public static com.google.protobuf.Parser<MarketSnapshotMessage> PARSER =
      new com.google.protobuf.AbstractParser<MarketSnapshotMessage>() {
    public MarketSnapshotMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new MarketSnapshotMessage(input, extensionRegistry);
    }
  };

  @java.lang.Override
  public com.google.protobuf.Parser<MarketSnapshotMessage> getParserForType() {
    return PARSER;
  }

  private int bitField0_;
  // optional sint64 marketId = 1;
  public static final int MARKETID_FIELD_NUMBER = 1;
  private long marketId_;
  /**
   * <code>optional sint64 marketId = 1;</code>
   *
   * <pre>
   * Market GUID.
   * Base for entries.
   * </pre>
   */
  public boolean hasMarketId() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional sint64 marketId = 1;</code>
   *
   * <pre>
   * Market GUID.
   * Base for entries.
   * </pre>
   */
  public long getMarketId() {
    return marketId_;
  }

  // optional sint64 sequence = 2;
  public static final int SEQUENCE_FIELD_NUMBER = 2;
  private long sequence_;
  /**
   * <code>optional sint64 sequence = 2;</code>
   */
  public boolean hasSequence() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional sint64 sequence = 2;</code>
   */
  public long getSequence() {
    return sequence_;
  }

  // optional sint64 lastUpdateSequence = 3;
  public static final int LASTUPDATESEQUENCE_FIELD_NUMBER = 3;
  private long lastUpdateSequence_;
  /**
   * <code>optional sint64 lastUpdateSequence = 3;</code>
   *
   * <pre>
   * Last update sequence number included in snapshot
   * </pre>
   */
  public boolean hasLastUpdateSequence() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>optional sint64 lastUpdateSequence = 3;</code>
   *
   * <pre>
   * Last update sequence number included in snapshot
   * </pre>
   */
  public long getLastUpdateSequence() {
    return lastUpdateSequence_;
  }

  // optional sint64 timeStamp = 4;
  public static final int TIMESTAMP_FIELD_NUMBER = 4;
  private long timeStamp_;
  /**
   * <code>optional sint64 timeStamp = 4;</code>
   *
   * <pre>
   * Message/Entry send time.
   * Base for entries, millisFIX, UTC
   * Date/Time in format 2012-12-31T23:59:59.123 UTC -&gt; 20121231235959123
   * </pre>
   */
  public boolean hasTimeStamp() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <code>optional sint64 timeStamp = 4;</code>
   *
   * <pre>
   * Message/Entry send time.
   * Base for entries, millisFIX, UTC
   * Date/Time in format 2012-12-31T23:59:59.123 UTC -&gt; 20121231235959123
   * </pre>
   */
  public long getTimeStamp() {
    return timeStamp_;
  }

  // optional sint32 tradeDate = 5;
  public static final int TRADEDATE_FIELD_NUMBER = 5;
  private int tradeDate_;
  /**
   * <code>optional sint32 tradeDate = 5;</code>
   *
   * <pre>
   * Message/Entry trade date.
   * Base for entries, days, market local time zone.
   * Date/Only in format 2012-07-04 -&gt; 20120704
   * </pre>
   */
  public boolean hasTradeDate() {
    return ((bitField0_ & 0x00000010) == 0x00000010);
  }
  /**
   * <code>optional sint32 tradeDate = 5;</code>
   *
   * <pre>
   * Message/Entry trade date.
   * Base for entries, days, market local time zone.
   * Date/Only in format 2012-07-04 -&gt; 20120704
   * </pre>
   */
  public int getTradeDate() {
    return tradeDate_;
  }

  // repeated .org.openfeed.proto.data.MarketEntry entry = 6;
  public static final int ENTRY_FIELD_NUMBER = 6;
  private java.util.List<org.openfeed.proto.data.MarketEntry> entry_;
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  public java.util.List<org.openfeed.proto.data.MarketEntry> getEntryList() {
    return entry_;
  }
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  public java.util.List<? extends org.openfeed.proto.data.MarketEntryOrBuilder> 
      getEntryOrBuilderList() {
    return entry_;
  }
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  public int getEntryCount() {
    return entry_.size();
  }
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  public org.openfeed.proto.data.MarketEntry getEntry(int index) {
    return entry_.get(index);
  }
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  public org.openfeed.proto.data.MarketEntryOrBuilder getEntryOrBuilder(
      int index) {
    return entry_.get(index);
  }

  // optional sint32 priceExponent = 7;
  public static final int PRICEEXPONENT_FIELD_NUMBER = 7;
  private int priceExponent_;
  /**
   * <code>optional sint32 priceExponent = 7;</code>
   *
   * <pre>
   * Shared base price exponent for market entries.
   * </pre>
   */
  public boolean hasPriceExponent() {
    return ((bitField0_ & 0x00000020) == 0x00000020);
  }
  /**
   * <code>optional sint32 priceExponent = 7;</code>
   *
   * <pre>
   * Shared base price exponent for market entries.
   * </pre>
   */
  public int getPriceExponent() {
    return priceExponent_;
  }

  // optional sint32 sizeExponent = 8;
  public static final int SIZEEXPONENT_FIELD_NUMBER = 8;
  private int sizeExponent_;
  /**
   * <code>optional sint32 sizeExponent = 8;</code>
   *
   * <pre>
   * Shared base size exponent for market entries.
   * </pre>
   */
  public boolean hasSizeExponent() {
    return ((bitField0_ & 0x00000040) == 0x00000040);
  }
  /**
   * <code>optional sint32 sizeExponent = 8;</code>
   *
   * <pre>
   * Shared base size exponent for market entries.
   * </pre>
   */
  public int getSizeExponent() {
    return sizeExponent_;
  }

  // optional sint32 totalExpectedEntries = 9;
  public static final int TOTALEXPECTEDENTRIES_FIELD_NUMBER = 9;
  private int totalExpectedEntries_;
  /**
   * <code>optional sint32 totalExpectedEntries = 9;</code>
   *
   * <pre>
   * Total number of MarketEntry items to expect to receive
   * before the snapshot for this marketId can be considered complete.
   * Entries for a given marketId may come in multiple packets and messages.
   * Each snapshot packet/message must contain only entries for a single marketId.
   * </pre>
   */
  public boolean hasTotalExpectedEntries() {
    return ((bitField0_ & 0x00000080) == 0x00000080);
  }
  /**
   * <code>optional sint32 totalExpectedEntries = 9;</code>
   *
   * <pre>
   * Total number of MarketEntry items to expect to receive
   * before the snapshot for this marketId can be considered complete.
   * Entries for a given marketId may come in multiple packets and messages.
   * Each snapshot packet/message must contain only entries for a single marketId.
   * </pre>
   */
  public int getTotalExpectedEntries() {
    return totalExpectedEntries_;
  }

  private void initFields() {
    marketId_ = 0L;
    sequence_ = 0L;
    lastUpdateSequence_ = 0L;
    timeStamp_ = 0L;
    tradeDate_ = 0;
    entry_ = java.util.Collections.emptyList();
    priceExponent_ = 0;
    sizeExponent_ = 0;
    totalExpectedEntries_ = 0;
  }
  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized != -1) return isInitialized == 1;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeSInt64(1, marketId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeSInt64(2, sequence_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeSInt64(3, lastUpdateSequence_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeSInt64(4, timeStamp_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      output.writeSInt32(5, tradeDate_);
    }
    for (int i = 0; i < entry_.size(); i++) {
      output.writeMessage(6, entry_.get(i));
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      output.writeSInt32(7, priceExponent_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      output.writeSInt32(8, sizeExponent_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      output.writeSInt32(9, totalExpectedEntries_);
    }
    getUnknownFields().writeTo(output);
  }

  private int memoizedSerializedSize = -1;
  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(1, marketId_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(2, sequence_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(3, lastUpdateSequence_);
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt64Size(4, timeStamp_);
    }
    if (((bitField0_ & 0x00000010) == 0x00000010)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(5, tradeDate_);
    }
    for (int i = 0; i < entry_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, entry_.get(i));
    }
    if (((bitField0_ & 0x00000020) == 0x00000020)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(7, priceExponent_);
    }
    if (((bitField0_ & 0x00000040) == 0x00000040)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(8, sizeExponent_);
    }
    if (((bitField0_ & 0x00000080) == 0x00000080)) {
      size += com.google.protobuf.CodedOutputStream
        .computeSInt32Size(9, totalExpectedEntries_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  protected java.lang.Object writeReplace()
      throws java.io.ObjectStreamException {
    return super.writeReplace();
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.openfeed.proto.data.MarketSnapshotMessage)) {
      return super.equals(obj);
    }
    org.openfeed.proto.data.MarketSnapshotMessage other = (org.openfeed.proto.data.MarketSnapshotMessage) obj;

    boolean result = true;
    result = result && (hasMarketId() == other.hasMarketId());
    if (hasMarketId()) {
      result = result && (getMarketId()
          == other.getMarketId());
    }
    result = result && (hasSequence() == other.hasSequence());
    if (hasSequence()) {
      result = result && (getSequence()
          == other.getSequence());
    }
    result = result && (hasLastUpdateSequence() == other.hasLastUpdateSequence());
    if (hasLastUpdateSequence()) {
      result = result && (getLastUpdateSequence()
          == other.getLastUpdateSequence());
    }
    result = result && (hasTimeStamp() == other.hasTimeStamp());
    if (hasTimeStamp()) {
      result = result && (getTimeStamp()
          == other.getTimeStamp());
    }
    result = result && (hasTradeDate() == other.hasTradeDate());
    if (hasTradeDate()) {
      result = result && (getTradeDate()
          == other.getTradeDate());
    }
    result = result && getEntryList()
        .equals(other.getEntryList());
    result = result && (hasPriceExponent() == other.hasPriceExponent());
    if (hasPriceExponent()) {
      result = result && (getPriceExponent()
          == other.getPriceExponent());
    }
    result = result && (hasSizeExponent() == other.hasSizeExponent());
    if (hasSizeExponent()) {
      result = result && (getSizeExponent()
          == other.getSizeExponent());
    }
    result = result && (hasTotalExpectedEntries() == other.hasTotalExpectedEntries());
    if (hasTotalExpectedEntries()) {
      result = result && (getTotalExpectedEntries()
          == other.getTotalExpectedEntries());
    }
    result = result &&
        getUnknownFields().equals(other.getUnknownFields());
    return result;
  }

  private int memoizedHashCode = 0;
  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    if (hasMarketId()) {
      hash = (37 * hash) + MARKETID_FIELD_NUMBER;
      hash = (53 * hash) + hashLong(getMarketId());
    }
    if (hasSequence()) {
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + hashLong(getSequence());
    }
    if (hasLastUpdateSequence()) {
      hash = (37 * hash) + LASTUPDATESEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + hashLong(getLastUpdateSequence());
    }
    if (hasTimeStamp()) {
      hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
      hash = (53 * hash) + hashLong(getTimeStamp());
    }
    if (hasTradeDate()) {
      hash = (37 * hash) + TRADEDATE_FIELD_NUMBER;
      hash = (53 * hash) + getTradeDate();
    }
    if (getEntryCount() > 0) {
      hash = (37 * hash) + ENTRY_FIELD_NUMBER;
      hash = (53 * hash) + getEntryList().hashCode();
    }
    if (hasPriceExponent()) {
      hash = (37 * hash) + PRICEEXPONENT_FIELD_NUMBER;
      hash = (53 * hash) + getPriceExponent();
    }
    if (hasSizeExponent()) {
      hash = (37 * hash) + SIZEEXPONENT_FIELD_NUMBER;
      hash = (53 * hash) + getSizeExponent();
    }
    if (hasTotalExpectedEntries()) {
      hash = (37 * hash) + TOTALEXPECTEDENTRIES_FIELD_NUMBER;
      hash = (53 * hash) + getTotalExpectedEntries();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.openfeed.proto.data.MarketSnapshotMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.openfeed.proto.data.MarketSnapshotMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.openfeed.proto.data.MarketSnapshotMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.openfeed.proto.data.MarketSnapshotMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.openfeed.proto.data.MarketSnapshotMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.openfeed.proto.data.MarketSnapshotMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static org.openfeed.proto.data.MarketSnapshotMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static org.openfeed.proto.data.MarketSnapshotMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static org.openfeed.proto.data.MarketSnapshotMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static org.openfeed.proto.data.MarketSnapshotMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public static Builder newBuilder() { return Builder.create(); }
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder(org.openfeed.proto.data.MarketSnapshotMessage prototype) {
    return newBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() { return newBuilder(this); }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.openfeed.proto.data.MarketSnapshotMessage}
   *
   * <pre>
   * Market data message.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder>
     implements org.openfeed.proto.data.MarketSnapshotMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.openfeed.proto.data.MarketSnapshotMessageSpec.internal_static_org_openfeed_proto_data_MarketSnapshotMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.openfeed.proto.data.MarketSnapshotMessageSpec.internal_static_org_openfeed_proto_data_MarketSnapshotMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.openfeed.proto.data.MarketSnapshotMessage.class, org.openfeed.proto.data.MarketSnapshotMessage.Builder.class);
    }

    // Construct using org.openfeed.proto.data.MarketSnapshotMessage.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getEntryFieldBuilder();
      }
    }
    private static Builder create() {
      return new Builder();
    }

    public Builder clear() {
      super.clear();
      marketId_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000001);
      sequence_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000002);
      lastUpdateSequence_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000004);
      timeStamp_ = 0L;
      bitField0_ = (bitField0_ & ~0x00000008);
      tradeDate_ = 0;
      bitField0_ = (bitField0_ & ~0x00000010);
      if (entryBuilder_ == null) {
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        entryBuilder_.clear();
      }
      priceExponent_ = 0;
      bitField0_ = (bitField0_ & ~0x00000040);
      sizeExponent_ = 0;
      bitField0_ = (bitField0_ & ~0x00000080);
      totalExpectedEntries_ = 0;
      bitField0_ = (bitField0_ & ~0x00000100);
      return this;
    }

    public Builder clone() {
      return create().mergeFrom(buildPartial());
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.openfeed.proto.data.MarketSnapshotMessageSpec.internal_static_org_openfeed_proto_data_MarketSnapshotMessage_descriptor;
    }

    public org.openfeed.proto.data.MarketSnapshotMessage getDefaultInstanceForType() {
      return org.openfeed.proto.data.MarketSnapshotMessage.getDefaultInstance();
    }

    public org.openfeed.proto.data.MarketSnapshotMessage build() {
      org.openfeed.proto.data.MarketSnapshotMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.openfeed.proto.data.MarketSnapshotMessage buildPartial() {
      org.openfeed.proto.data.MarketSnapshotMessage result = new org.openfeed.proto.data.MarketSnapshotMessage(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.marketId_ = marketId_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.sequence_ = sequence_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.lastUpdateSequence_ = lastUpdateSequence_;
      if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
        to_bitField0_ |= 0x00000008;
      }
      result.timeStamp_ = timeStamp_;
      if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
        to_bitField0_ |= 0x00000010;
      }
      result.tradeDate_ = tradeDate_;
      if (entryBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          entry_ = java.util.Collections.unmodifiableList(entry_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.entry_ = entry_;
      } else {
        result.entry_ = entryBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
        to_bitField0_ |= 0x00000020;
      }
      result.priceExponent_ = priceExponent_;
      if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
        to_bitField0_ |= 0x00000040;
      }
      result.sizeExponent_ = sizeExponent_;
      if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
        to_bitField0_ |= 0x00000080;
      }
      result.totalExpectedEntries_ = totalExpectedEntries_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.openfeed.proto.data.MarketSnapshotMessage) {
        return mergeFrom((org.openfeed.proto.data.MarketSnapshotMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.openfeed.proto.data.MarketSnapshotMessage other) {
      if (other == org.openfeed.proto.data.MarketSnapshotMessage.getDefaultInstance()) return this;
      if (other.hasMarketId()) {
        setMarketId(other.getMarketId());
      }
      if (other.hasSequence()) {
        setSequence(other.getSequence());
      }
      if (other.hasLastUpdateSequence()) {
        setLastUpdateSequence(other.getLastUpdateSequence());
      }
      if (other.hasTimeStamp()) {
        setTimeStamp(other.getTimeStamp());
      }
      if (other.hasTradeDate()) {
        setTradeDate(other.getTradeDate());
      }
      if (entryBuilder_ == null) {
        if (!other.entry_.isEmpty()) {
          if (entry_.isEmpty()) {
            entry_ = other.entry_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureEntryIsMutable();
            entry_.addAll(other.entry_);
          }
          onChanged();
        }
      } else {
        if (!other.entry_.isEmpty()) {
          if (entryBuilder_.isEmpty()) {
            entryBuilder_.dispose();
            entryBuilder_ = null;
            entry_ = other.entry_;
            bitField0_ = (bitField0_ & ~0x00000020);
            entryBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getEntryFieldBuilder() : null;
          } else {
            entryBuilder_.addAllMessages(other.entry_);
          }
        }
      }
      if (other.hasPriceExponent()) {
        setPriceExponent(other.getPriceExponent());
      }
      if (other.hasSizeExponent()) {
        setSizeExponent(other.getSizeExponent());
      }
      if (other.hasTotalExpectedEntries()) {
        setTotalExpectedEntries(other.getTotalExpectedEntries());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.openfeed.proto.data.MarketSnapshotMessage parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.openfeed.proto.data.MarketSnapshotMessage) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    // optional sint64 marketId = 1;
    private long marketId_ ;
    /**
     * <code>optional sint64 marketId = 1;</code>
     *
     * <pre>
     * Market GUID.
     * Base for entries.
     * </pre>
     */
    public boolean hasMarketId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional sint64 marketId = 1;</code>
     *
     * <pre>
     * Market GUID.
     * Base for entries.
     * </pre>
     */
    public long getMarketId() {
      return marketId_;
    }
    /**
     * <code>optional sint64 marketId = 1;</code>
     *
     * <pre>
     * Market GUID.
     * Base for entries.
     * </pre>
     */
    public Builder setMarketId(long value) {
      bitField0_ |= 0x00000001;
      marketId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint64 marketId = 1;</code>
     *
     * <pre>
     * Market GUID.
     * Base for entries.
     * </pre>
     */
    public Builder clearMarketId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      marketId_ = 0L;
      onChanged();
      return this;
    }

    // optional sint64 sequence = 2;
    private long sequence_ ;
    /**
     * <code>optional sint64 sequence = 2;</code>
     */
    public boolean hasSequence() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional sint64 sequence = 2;</code>
     */
    public long getSequence() {
      return sequence_;
    }
    /**
     * <code>optional sint64 sequence = 2;</code>
     */
    public Builder setSequence(long value) {
      bitField0_ |= 0x00000002;
      sequence_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint64 sequence = 2;</code>
     */
    public Builder clearSequence() {
      bitField0_ = (bitField0_ & ~0x00000002);
      sequence_ = 0L;
      onChanged();
      return this;
    }

    // optional sint64 lastUpdateSequence = 3;
    private long lastUpdateSequence_ ;
    /**
     * <code>optional sint64 lastUpdateSequence = 3;</code>
     *
     * <pre>
     * Last update sequence number included in snapshot
     * </pre>
     */
    public boolean hasLastUpdateSequence() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional sint64 lastUpdateSequence = 3;</code>
     *
     * <pre>
     * Last update sequence number included in snapshot
     * </pre>
     */
    public long getLastUpdateSequence() {
      return lastUpdateSequence_;
    }
    /**
     * <code>optional sint64 lastUpdateSequence = 3;</code>
     *
     * <pre>
     * Last update sequence number included in snapshot
     * </pre>
     */
    public Builder setLastUpdateSequence(long value) {
      bitField0_ |= 0x00000004;
      lastUpdateSequence_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint64 lastUpdateSequence = 3;</code>
     *
     * <pre>
     * Last update sequence number included in snapshot
     * </pre>
     */
    public Builder clearLastUpdateSequence() {
      bitField0_ = (bitField0_ & ~0x00000004);
      lastUpdateSequence_ = 0L;
      onChanged();
      return this;
    }

    // optional sint64 timeStamp = 4;
    private long timeStamp_ ;
    /**
     * <code>optional sint64 timeStamp = 4;</code>
     *
     * <pre>
     * Message/Entry send time.
     * Base for entries, millisFIX, UTC
     * Date/Time in format 2012-12-31T23:59:59.123 UTC -&gt; 20121231235959123
     * </pre>
     */
    public boolean hasTimeStamp() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional sint64 timeStamp = 4;</code>
     *
     * <pre>
     * Message/Entry send time.
     * Base for entries, millisFIX, UTC
     * Date/Time in format 2012-12-31T23:59:59.123 UTC -&gt; 20121231235959123
     * </pre>
     */
    public long getTimeStamp() {
      return timeStamp_;
    }
    /**
     * <code>optional sint64 timeStamp = 4;</code>
     *
     * <pre>
     * Message/Entry send time.
     * Base for entries, millisFIX, UTC
     * Date/Time in format 2012-12-31T23:59:59.123 UTC -&gt; 20121231235959123
     * </pre>
     */
    public Builder setTimeStamp(long value) {
      bitField0_ |= 0x00000008;
      timeStamp_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint64 timeStamp = 4;</code>
     *
     * <pre>
     * Message/Entry send time.
     * Base for entries, millisFIX, UTC
     * Date/Time in format 2012-12-31T23:59:59.123 UTC -&gt; 20121231235959123
     * </pre>
     */
    public Builder clearTimeStamp() {
      bitField0_ = (bitField0_ & ~0x00000008);
      timeStamp_ = 0L;
      onChanged();
      return this;
    }

    // optional sint32 tradeDate = 5;
    private int tradeDate_ ;
    /**
     * <code>optional sint32 tradeDate = 5;</code>
     *
     * <pre>
     * Message/Entry trade date.
     * Base for entries, days, market local time zone.
     * Date/Only in format 2012-07-04 -&gt; 20120704
     * </pre>
     */
    public boolean hasTradeDate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional sint32 tradeDate = 5;</code>
     *
     * <pre>
     * Message/Entry trade date.
     * Base for entries, days, market local time zone.
     * Date/Only in format 2012-07-04 -&gt; 20120704
     * </pre>
     */
    public int getTradeDate() {
      return tradeDate_;
    }
    /**
     * <code>optional sint32 tradeDate = 5;</code>
     *
     * <pre>
     * Message/Entry trade date.
     * Base for entries, days, market local time zone.
     * Date/Only in format 2012-07-04 -&gt; 20120704
     * </pre>
     */
    public Builder setTradeDate(int value) {
      bitField0_ |= 0x00000010;
      tradeDate_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 tradeDate = 5;</code>
     *
     * <pre>
     * Message/Entry trade date.
     * Base for entries, days, market local time zone.
     * Date/Only in format 2012-07-04 -&gt; 20120704
     * </pre>
     */
    public Builder clearTradeDate() {
      bitField0_ = (bitField0_ & ~0x00000010);
      tradeDate_ = 0;
      onChanged();
      return this;
    }

    // repeated .org.openfeed.proto.data.MarketEntry entry = 6;
    private java.util.List<org.openfeed.proto.data.MarketEntry> entry_ =
      java.util.Collections.emptyList();
    private void ensureEntryIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        entry_ = new java.util.ArrayList<org.openfeed.proto.data.MarketEntry>(entry_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        org.openfeed.proto.data.MarketEntry, org.openfeed.proto.data.MarketEntry.Builder, org.openfeed.proto.data.MarketEntryOrBuilder> entryBuilder_;

    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public java.util.List<org.openfeed.proto.data.MarketEntry> getEntryList() {
      if (entryBuilder_ == null) {
        return java.util.Collections.unmodifiableList(entry_);
      } else {
        return entryBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public int getEntryCount() {
      if (entryBuilder_ == null) {
        return entry_.size();
      } else {
        return entryBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public org.openfeed.proto.data.MarketEntry getEntry(int index) {
      if (entryBuilder_ == null) {
        return entry_.get(index);
      } else {
        return entryBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public Builder setEntry(
        int index, org.openfeed.proto.data.MarketEntry value) {
      if (entryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.set(index, value);
        onChanged();
      } else {
        entryBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public Builder setEntry(
        int index, org.openfeed.proto.data.MarketEntry.Builder builderForValue) {
      if (entryBuilder_ == null) {
        ensureEntryIsMutable();
        entry_.set(index, builderForValue.build());
        onChanged();
      } else {
        entryBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public Builder addEntry(org.openfeed.proto.data.MarketEntry value) {
      if (entryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(value);
        onChanged();
      } else {
        entryBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public Builder addEntry(
        int index, org.openfeed.proto.data.MarketEntry value) {
      if (entryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEntryIsMutable();
        entry_.add(index, value);
        onChanged();
      } else {
        entryBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public Builder addEntry(
        org.openfeed.proto.data.MarketEntry.Builder builderForValue) {
      if (entryBuilder_ == null) {
        ensureEntryIsMutable();
        entry_.add(builderForValue.build());
        onChanged();
      } else {
        entryBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public Builder addEntry(
        int index, org.openfeed.proto.data.MarketEntry.Builder builderForValue) {
      if (entryBuilder_ == null) {
        ensureEntryIsMutable();
        entry_.add(index, builderForValue.build());
        onChanged();
      } else {
        entryBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public Builder addAllEntry(
        java.lang.Iterable<? extends org.openfeed.proto.data.MarketEntry> values) {
      if (entryBuilder_ == null) {
        ensureEntryIsMutable();
        super.addAll(values, entry_);
        onChanged();
      } else {
        entryBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public Builder clearEntry() {
      if (entryBuilder_ == null) {
        entry_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        entryBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public Builder removeEntry(int index) {
      if (entryBuilder_ == null) {
        ensureEntryIsMutable();
        entry_.remove(index);
        onChanged();
      } else {
        entryBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public org.openfeed.proto.data.MarketEntry.Builder getEntryBuilder(
        int index) {
      return getEntryFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public org.openfeed.proto.data.MarketEntryOrBuilder getEntryOrBuilder(
        int index) {
      if (entryBuilder_ == null) {
        return entry_.get(index);  } else {
        return entryBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public java.util.List<? extends org.openfeed.proto.data.MarketEntryOrBuilder> 
         getEntryOrBuilderList() {
      if (entryBuilder_ != null) {
        return entryBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(entry_);
      }
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public org.openfeed.proto.data.MarketEntry.Builder addEntryBuilder() {
      return getEntryFieldBuilder().addBuilder(
          org.openfeed.proto.data.MarketEntry.getDefaultInstance());
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public org.openfeed.proto.data.MarketEntry.Builder addEntryBuilder(
        int index) {
      return getEntryFieldBuilder().addBuilder(
          index, org.openfeed.proto.data.MarketEntry.getDefaultInstance());
    }
    /**
     * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 6;</code>
     *
     * <pre>
     * Ordered list of market entries.
     * </pre>
     */
    public java.util.List<org.openfeed.proto.data.MarketEntry.Builder> 
         getEntryBuilderList() {
      return getEntryFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        org.openfeed.proto.data.MarketEntry, org.openfeed.proto.data.MarketEntry.Builder, org.openfeed.proto.data.MarketEntryOrBuilder> 
        getEntryFieldBuilder() {
      if (entryBuilder_ == null) {
        entryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            org.openfeed.proto.data.MarketEntry, org.openfeed.proto.data.MarketEntry.Builder, org.openfeed.proto.data.MarketEntryOrBuilder>(
                entry_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        entry_ = null;
      }
      return entryBuilder_;
    }

    // optional sint32 priceExponent = 7;
    private int priceExponent_ ;
    /**
     * <code>optional sint32 priceExponent = 7;</code>
     *
     * <pre>
     * Shared base price exponent for market entries.
     * </pre>
     */
    public boolean hasPriceExponent() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional sint32 priceExponent = 7;</code>
     *
     * <pre>
     * Shared base price exponent for market entries.
     * </pre>
     */
    public int getPriceExponent() {
      return priceExponent_;
    }
    /**
     * <code>optional sint32 priceExponent = 7;</code>
     *
     * <pre>
     * Shared base price exponent for market entries.
     * </pre>
     */
    public Builder setPriceExponent(int value) {
      bitField0_ |= 0x00000040;
      priceExponent_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 priceExponent = 7;</code>
     *
     * <pre>
     * Shared base price exponent for market entries.
     * </pre>
     */
    public Builder clearPriceExponent() {
      bitField0_ = (bitField0_ & ~0x00000040);
      priceExponent_ = 0;
      onChanged();
      return this;
    }

    // optional sint32 sizeExponent = 8;
    private int sizeExponent_ ;
    /**
     * <code>optional sint32 sizeExponent = 8;</code>
     *
     * <pre>
     * Shared base size exponent for market entries.
     * </pre>
     */
    public boolean hasSizeExponent() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional sint32 sizeExponent = 8;</code>
     *
     * <pre>
     * Shared base size exponent for market entries.
     * </pre>
     */
    public int getSizeExponent() {
      return sizeExponent_;
    }
    /**
     * <code>optional sint32 sizeExponent = 8;</code>
     *
     * <pre>
     * Shared base size exponent for market entries.
     * </pre>
     */
    public Builder setSizeExponent(int value) {
      bitField0_ |= 0x00000080;
      sizeExponent_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 sizeExponent = 8;</code>
     *
     * <pre>
     * Shared base size exponent for market entries.
     * </pre>
     */
    public Builder clearSizeExponent() {
      bitField0_ = (bitField0_ & ~0x00000080);
      sizeExponent_ = 0;
      onChanged();
      return this;
    }

    // optional sint32 totalExpectedEntries = 9;
    private int totalExpectedEntries_ ;
    /**
     * <code>optional sint32 totalExpectedEntries = 9;</code>
     *
     * <pre>
     * Total number of MarketEntry items to expect to receive
     * before the snapshot for this marketId can be considered complete.
     * Entries for a given marketId may come in multiple packets and messages.
     * Each snapshot packet/message must contain only entries for a single marketId.
     * </pre>
     */
    public boolean hasTotalExpectedEntries() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional sint32 totalExpectedEntries = 9;</code>
     *
     * <pre>
     * Total number of MarketEntry items to expect to receive
     * before the snapshot for this marketId can be considered complete.
     * Entries for a given marketId may come in multiple packets and messages.
     * Each snapshot packet/message must contain only entries for a single marketId.
     * </pre>
     */
    public int getTotalExpectedEntries() {
      return totalExpectedEntries_;
    }
    /**
     * <code>optional sint32 totalExpectedEntries = 9;</code>
     *
     * <pre>
     * Total number of MarketEntry items to expect to receive
     * before the snapshot for this marketId can be considered complete.
     * Entries for a given marketId may come in multiple packets and messages.
     * Each snapshot packet/message must contain only entries for a single marketId.
     * </pre>
     */
    public Builder setTotalExpectedEntries(int value) {
      bitField0_ |= 0x00000100;
      totalExpectedEntries_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional sint32 totalExpectedEntries = 9;</code>
     *
     * <pre>
     * Total number of MarketEntry items to expect to receive
     * before the snapshot for this marketId can be considered complete.
     * Entries for a given marketId may come in multiple packets and messages.
     * Each snapshot packet/message must contain only entries for a single marketId.
     * </pre>
     */
    public Builder clearTotalExpectedEntries() {
      bitField0_ = (bitField0_ & ~0x00000100);
      totalExpectedEntries_ = 0;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:org.openfeed.proto.data.MarketSnapshotMessage)
  }

  static {
    defaultInstance = new MarketSnapshotMessage(true);
    defaultInstance.initFields();
  }

  // @@protoc_insertion_point(class_scope:org.openfeed.proto.data.MarketSnapshotMessage)
}

