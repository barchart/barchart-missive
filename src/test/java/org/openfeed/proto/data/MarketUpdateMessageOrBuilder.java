// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MarketUpdateMessageSpec.proto

package org.openfeed.proto.data;

public interface MarketUpdateMessageOrBuilder
    extends com.google.protobuf.MessageOrBuilder {

  // optional sint64 marketId = 1;
  /**
   * <code>optional sint64 marketId = 1;</code>
   *
   * <pre>
   * Market GUID.
   * Base for entries.
   * </pre>
   */
  boolean hasMarketId();
  /**
   * <code>optional sint64 marketId = 1;</code>
   *
   * <pre>
   * Market GUID.
   * Base for entries.
   * </pre>
   */
  long getMarketId();

  // optional sint64 sequence = 2;
  /**
   * <code>optional sint64 sequence = 2;</code>
   *
   * <pre>
   * Market sequence number.
   * Base for entries.
   * </pre>
   */
  boolean hasSequence();
  /**
   * <code>optional sint64 sequence = 2;</code>
   *
   * <pre>
   * Market sequence number.
   * Base for entries.
   * </pre>
   */
  long getSequence();

  // optional sint64 timeStamp = 3;
  /**
   * <code>optional sint64 timeStamp = 3;</code>
   *
   * <pre>
   * Message/Entry send time.
   * Base for entries, millisFIX, UTC
   * Date/Time in format 2012-12-31T23:59:59.123 UTC -&gt; 20121231235959123
   * </pre>
   */
  boolean hasTimeStamp();
  /**
   * <code>optional sint64 timeStamp = 3;</code>
   *
   * <pre>
   * Message/Entry send time.
   * Base for entries, millisFIX, UTC
   * Date/Time in format 2012-12-31T23:59:59.123 UTC -&gt; 20121231235959123
   * </pre>
   */
  long getTimeStamp();

  // optional sint32 tradeDate = 4;
  /**
   * <code>optional sint32 tradeDate = 4;</code>
   *
   * <pre>
   * Message/Entry trade date.
   * Base for entries, days, market local time zone.
   * Date/Only in format 2012-07-04 -&gt; 20120704
   * </pre>
   */
  boolean hasTradeDate();
  /**
   * <code>optional sint32 tradeDate = 4;</code>
   *
   * <pre>
   * Message/Entry trade date.
   * Base for entries, days, market local time zone.
   * Date/Only in format 2012-07-04 -&gt; 20120704
   * </pre>
   */
  int getTradeDate();

  // optional sint32 priceExponent = 5;
  /**
   * <code>optional sint32 priceExponent = 5;</code>
   *
   * <pre>
   * Shared base price exponent for market entries.
   * </pre>
   */
  boolean hasPriceExponent();
  /**
   * <code>optional sint32 priceExponent = 5;</code>
   *
   * <pre>
   * Shared base price exponent for market entries.
   * </pre>
   */
  int getPriceExponent();

  // optional sint32 sizeExponent = 6;
  /**
   * <code>optional sint32 sizeExponent = 6;</code>
   *
   * <pre>
   * Shared base size exponent for market entries.
   * </pre>
   */
  boolean hasSizeExponent();
  /**
   * <code>optional sint32 sizeExponent = 6;</code>
   *
   * <pre>
   * Shared base size exponent for market entries.
   * </pre>
   */
  int getSizeExponent();

  // repeated .org.openfeed.proto.data.MarketEntry entry = 7;
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 7;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  java.util.List<org.openfeed.proto.data.MarketEntry> 
      getEntryList();
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 7;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  org.openfeed.proto.data.MarketEntry getEntry(int index);
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 7;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  int getEntryCount();
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 7;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  java.util.List<? extends org.openfeed.proto.data.MarketEntryOrBuilder> 
      getEntryOrBuilderList();
  /**
   * <code>repeated .org.openfeed.proto.data.MarketEntry entry = 7;</code>
   *
   * <pre>
   * Ordered list of market entries.
   * </pre>
   */
  org.openfeed.proto.data.MarketEntryOrBuilder getEntryOrBuilder(
      int index);
}
